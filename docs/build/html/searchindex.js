Search.setIndex({docnames:["api/matchup.models.Model.IterModel","api/matchup.models.Model.Model","api/matchup.models.Model.ModelExecutionError","api/matchup.models.Model.ModelType","api/matchup.models.Model.NoSuchModelException","api/matchup.models.Orchestrator.ModelMissingParameters","api/matchup.models.Orchestrator.NoSuchInputException","api/matchup.models.Orchestrator.NoSuchModelException","api/matchup.models.Orchestrator.Orchestrator","api/matchup.models.algorithms.Boolean.Boolean","api/matchup.models.algorithms.ExtendedBoolean.ExtendedBoolean","api/matchup.models.algorithms.Probabilistic.Probabilistic","api/matchup.models.algorithms.Vector.Vector","api/matchup.presentation.Sanitizer.Sanitizer","api/matchup.structure.Occurrence.Occurrence","api/matchup.structure.Query.NoSuchAnswerException","api/matchup.structure.Query.Query","api/matchup.structure.Solution.Result","api/matchup.structure.Solution.Solution","api/matchup.structure.Vocabulary.Vocabulary","api/matchup.structure.weighting.Idf.IDF","api/matchup.structure.weighting.Idf.IDFFactory","api/matchup.structure.weighting.Idf.InverseFrequency","api/matchup.structure.weighting.Idf.InverseFrequencyMax","api/matchup.structure.weighting.Idf.InverseFrequencySmooth","api/matchup.structure.weighting.Idf.ProbabilisticInverseFrequency","api/matchup.structure.weighting.Idf.Unary","api/matchup.structure.weighting.Tf.Binary","api/matchup.structure.weighting.Tf.LogNormalization","api/matchup.structure.weighting.Tf.TF","api/matchup.structure.weighting.Tf.TFFactory","api/matchup.structure.weighting.Tf.TermFrequency","help","index","license","overview"],envversion:{"sphinx.domains.c":1,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":1,"sphinx.domains.index":1,"sphinx.domains.javascript":1,"sphinx.domains.math":2,"sphinx.domains.python":1,"sphinx.domains.rst":1,"sphinx.domains.std":1,sphinx:56},filenames:["api\\matchup.models.Model.IterModel.rst","api\\matchup.models.Model.Model.rst","api\\matchup.models.Model.ModelExecutionError.rst","api\\matchup.models.Model.ModelType.rst","api\\matchup.models.Model.NoSuchModelException.rst","api\\matchup.models.Orchestrator.ModelMissingParameters.rst","api\\matchup.models.Orchestrator.NoSuchInputException.rst","api\\matchup.models.Orchestrator.NoSuchModelException.rst","api\\matchup.models.Orchestrator.Orchestrator.rst","api\\matchup.models.algorithms.Boolean.Boolean.rst","api\\matchup.models.algorithms.ExtendedBoolean.ExtendedBoolean.rst","api\\matchup.models.algorithms.Probabilistic.Probabilistic.rst","api\\matchup.models.algorithms.Vector.Vector.rst","api\\matchup.presentation.Sanitizer.Sanitizer.rst","api\\matchup.structure.Occurrence.Occurrence.rst","api\\matchup.structure.Query.NoSuchAnswerException.rst","api\\matchup.structure.Query.Query.rst","api\\matchup.structure.Solution.Result.rst","api\\matchup.structure.Solution.Solution.rst","api\\matchup.structure.Vocabulary.Vocabulary.rst","api\\matchup.structure.weighting.Idf.IDF.rst","api\\matchup.structure.weighting.Idf.IDFFactory.rst","api\\matchup.structure.weighting.Idf.InverseFrequency.rst","api\\matchup.structure.weighting.Idf.InverseFrequencyMax.rst","api\\matchup.structure.weighting.Idf.InverseFrequencySmooth.rst","api\\matchup.structure.weighting.Idf.ProbabilisticInverseFrequency.rst","api\\matchup.structure.weighting.Idf.Unary.rst","api\\matchup.structure.weighting.Tf.Binary.rst","api\\matchup.structure.weighting.Tf.LogNormalization.rst","api\\matchup.structure.weighting.Tf.TF.rst","api\\matchup.structure.weighting.Tf.TFFactory.rst","api\\matchup.structure.weighting.Tf.TermFrequency.rst","help.rst","index.rst","license.rst","overview.rst"],objects:{"matchup.models":{Model:[35,0,0,"-"],Orchestrator:[35,0,0,"-"]},"matchup.models.Model":{IterModel:[0,1,1,""],Model:[1,1,1,""],ModelExecutionError:[2,3,1,""],ModelType:[3,1,1,""],NoSuchModelException:[4,3,1,""]},"matchup.models.Model.IterModel":{initialize_occurrences:[0,2,1,""],initialize_pointers:[0,2,1,""],lowest_doc:[0,2,1,""],run:[0,2,1,""]},"matchup.models.Model.Model":{cast_solution:[1,2,1,""],run:[1,2,1,""]},"matchup.models.Model.ModelType":{Boolean:[3,4,1,""],ExtendedBoolean:[3,4,1,""],Probabilistic:[3,4,1,""],Vector:[3,4,1,""],get_type:[3,2,1,""]},"matchup.models.Orchestrator":{ModelMissingParameters:[5,3,1,""],NoSuchInputException:[6,3,1,""],NoSuchModelException:[7,3,1,""],Orchestrator:[8,1,1,""]},"matchup.models.Orchestrator.Orchestrator":{entry:[8,4,1,""],run_boolean:[8,2,1,""],run_extended_boolean:[8,2,1,""],run_probabilistic:[8,2,1,""],run_vector_space:[8,2,1,""],search:[8,2,1,""]},"matchup.models.algorithms":{Boolean:[35,0,0,"-"],ExtendedBoolean:[35,0,0,"-"],Probabilistic:[35,0,0,"-"],Vector:[35,0,0,"-"]},"matchup.models.algorithms.Boolean":{Boolean:[9,1,1,""]},"matchup.models.algorithms.Boolean.Boolean":{run:[9,2,1,""]},"matchup.models.algorithms.ExtendedBoolean":{ExtendedBoolean:[10,1,1,""]},"matchup.models.algorithms.ExtendedBoolean.ExtendedBoolean":{P:[10,4,1,""],generate_scores:[10,2,1,""],run:[10,2,1,""]},"matchup.models.algorithms.Probabilistic":{Probabilistic:[11,1,1,""]},"matchup.models.algorithms.Probabilistic.Probabilistic":{catch_pir:[11,2,1,""],catch_qir:[11,2,1,""],docs_with_key:[11,2,1,""],run:[11,2,1,""]},"matchup.models.algorithms.Vector":{Vector:[12,1,1,""]},"matchup.models.algorithms.Vector.Vector":{generate_scores:[12,2,1,""],process_doc:[12,2,1,""],process_documents:[12,2,1,""],process_query:[12,2,1,""],run:[12,2,1,""],stop:[12,2,1,""]},"matchup.presentation":{Sanitizer:[35,0,0,"-"]},"matchup.presentation.Sanitizer":{Sanitizer:[13,1,1,""]},"matchup.presentation.Sanitizer.Sanitizer":{import_stopwords:[13,2,1,""],index_line:[13,2,1,""],sanitize_line:[13,2,1,""],stopwords_path:[13,4,1,""],strip_accents:[13,2,1,""]},"matchup.structure":{Occurrence:[35,0,0,"-"],Query:[35,0,0,"-"],Solution:[35,0,0,"-"],Vocabulary:[35,0,0,"-"]},"matchup.structure.Occurrence":{Occurrence:[14,1,1,""]},"matchup.structure.Occurrence.Occurrence":{add:[14,2,1,""],doc:[14,2,1,""],frequency:[14,4,1,""],keyword:[14,4,1,""],score:[14,4,1,""]},"matchup.structure.Query":{NoSuchAnswerException:[15,3,1,""],Query:[16,1,1,""]},"matchup.structure.Query.Query":{ask:[16,2,1,""],search:[16,2,1,""],search_input:[16,4,1,""]},"matchup.structure.Solution":{Result:[17,1,1,""],Solution:[18,1,1,""]},"matchup.structure.Solution.Solution":{expand:[18,2,1,""],get_dict:[18,2,1,""]},"matchup.structure.Vocabulary":{Vocabulary:[19,1,1,""]},"matchup.structure.Vocabulary.Vocabulary":{generate_collection:[19,2,1,""],get_number_docs_by_keyword:[19,2,1,""],idf:[19,4,1,""],import_collection:[19,2,1,""],import_file:[19,2,1,""],import_folder:[19,2,1,""],keys:[19,4,1,""],sanitizer:[19,4,1,""],save:[19,2,1,""],size_vocabulary:[19,2,1,""],stopwords_path:[19,4,1,""],tf:[19,4,1,""]},"matchup.structure.weighting":{Idf:[35,0,0,"-"],Tf:[35,0,0,"-"]},"matchup.structure.weighting.Idf":{IDF:[20,1,1,""],IDFFactory:[21,1,1,""],InverseFrequency:[22,1,1,""],InverseFrequencyMax:[23,1,1,""],InverseFrequencySmooth:[24,1,1,""],ProbabilisticInverseFrequency:[25,1,1,""],Unary:[26,1,1,""]},"matchup.structure.weighting.Idf.IDF":{generate:[20,2,1,""],take:[20,2,1,""]},"matchup.structure.weighting.Idf.IDFFactory":{create_idf_by_str:[21,2,1,""]},"matchup.structure.weighting.Idf.InverseFrequency":{generate:[22,2,1,""]},"matchup.structure.weighting.Idf.InverseFrequencyMax":{generate:[23,2,1,""]},"matchup.structure.weighting.Idf.InverseFrequencySmooth":{generate:[24,2,1,""]},"matchup.structure.weighting.Idf.ProbabilisticInverseFrequency":{generate:[25,2,1,""]},"matchup.structure.weighting.Idf.Unary":{generate:[26,2,1,""]},"matchup.structure.weighting.Tf":{Binary:[27,1,1,""],LogNormalization:[28,1,1,""],TF:[29,1,1,""],TFFactory:[30,1,1,""],TermFrequency:[31,1,1,""]},"matchup.structure.weighting.Tf.Binary":{calculate:[27,2,1,""]},"matchup.structure.weighting.Tf.LogNormalization":{calculate:[28,2,1,""]},"matchup.structure.weighting.Tf.TF":{calculate:[29,2,1,""],take:[29,2,1,""]},"matchup.structure.weighting.Tf.TFFactory":{create_tf_by_str:[30,2,1,""]},"matchup.structure.weighting.Tf.TermFrequency":{calculate:[31,2,1,""]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"],"3":["py","exception","Python exception"],"4":["py","attribute","Python attribute"]},objtypes:{"0":"py:module","1":"py:class","2":"py:method","3":"py:exception","4":"py:attribute"},terms:{"abstract":[0,1,35],"boolean":[3,12,19,33],"case":19,"catch":11,"class":[0,1,3,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33],"enum":3,"float":[10,11,12,27,28,29,31],"function":[8,12,13,19],"import":33,"int":[11,13,19,20,29],"return":[0,1,8,9,10,11,12,13,14,16,19,20,22,23,24,25,26,27,28,29,31,35],"static":[0,1,9,10,11,12,13,21,30],"true":[20,29],"try":19,AND:34,And:33,BUT:34,FOR:34,NOT:34,THE:34,That:[12,33],The:[13,19,33,34,35],There:33,USE:34,WITH:34,With:33,_term_occurr:0,abc:[1,20,29],about:33,abov:34,absolut:19,accent:13,action:34,add:14,after:33,algorithm:[0,9,10,11,12,33],algortihm:12,all:[0,1,9,10,11,12,13,19,20,33,34],allow:33,almost:19,also:33,alt:33,aluno:[32,34],ani:[33,34],anoth:[0,12,33],answer:[16,33,35],append:19,approach:33,aris:34,asc:20,ask:[16,33],associ:34,attribut:[3,8,10,13,14,16,19],author:34,badg:33,base:[0,1,3,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,35],base_lin:13,basic:13,becaus:33,been:[19,33],befor:[19,33],between:12,bool:[12,19,20,29],brain:35,build:33,built:33,calcul:[12,22,23,24,25,26,27,28,29,31],can:[19,33],cast_solut:1,catch_pir:11,catch_qir:11,charg:34,chosen_doc:12,claim:34,classic:35,classmethod:[0,3,10],clean:13,collect:33,command:16,compar:33,complet:13,composit:35,concept:33,condit:34,configur:[33,35],connect:34,construct:12,constructor:33,contact:[32,33],contain:19,content:[19,33],contract:34,copi:34,copyright:34,core:8,correct:19,creat:[0,33],create_idf_by_str:21,create_tf_by_str:30,damag:34,data:[0,9,11,12,19,33,35],deal:34,defaultdict:12,defin:[0,1,10],desc:20,describ:[16,35],design:35,dict:20,dictionari:12,directori:33,disc:19,distribut:34,doc:[0,12,14],doc_repr:[10,12],docs_with_kei:11,document:[0,1,3,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35],doesn:33,edu:[32,34],element:20,encapsul:35,engin:33,entri:[0,1,8,10],enumer:3,event:34,exampl:33,except:[2,4,5,6,7,15],execut:[8,16,33,35],expand:18,explor:33,express:34,extend:33,extendedboolean:[3,33],extract:33,failur:19,fals:19,fij:[28,31],file:[13,19,33,34],file_path:19,first:[20,33,35],firstli:33,fit:34,flag:[12,19],folder:[19,33],folder_path:19,follow:34,format:33,four:33,free:34,frequenc:[14,22,23,24,25,35],from:[13,33,34],furnish:34,gener:[12,19,20,22,23,24,25,26,29],generate_collect:[19,33],generate_scor:[10,12],get:[13,19,33],get_dict:18,get_number_docs_by_keyword:19,get_typ:3,getter:8,given:[12,19],grant:34,had:33,happen:33,has:19,have:[19,33],haven:33,help:33,here:[33,35],herebi:34,holder:34,how:33,http:33,identifi:19,idf:[8,12,16,19,21,22,23,24,25,26,30,33],implement:[33,35],impli:34,import_collect:[19,33],import_fil:[19,33],import_fold:[19,33],import_stopword:13,includ:34,index:[13,33],index_lin:13,indic:[12,19],inform:33,initi:0,initialize_occurr:0,initialize_point:0,input:8,insert:19,insight:33,interfac:35,invers:[22,23,24,25],itermodel:[10,11,12,35],its:[12,33],just:[0,33],kei:[11,19],keyword:[0,11,12,14,19,20,27,28,29,31],kind:34,kwarg:[8,16,19],latest:33,learn:33,let:33,liabil:34,liabl:34,lib:33,librari:33,licens:33,limit:34,line:[13,16],list:[0,1,8,9,10,11,12,13,16,18,19,35],log:[22,23,24,25,28],lowest:[0,12],lowest_doc:0,make:[16,33],manag:33,marco:[32,34],matchup:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33],max:23,memori:[13,33],merchant:34,merg:34,method:[0,1,3,8,9,10,11,12,13,14,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33],model:[0,2,3,4,5,6,7,8,9,10,11,12,16,22,23,24,25,26,27,28,31,33],modeltyp:[8,16,33],modifi:34,modul:33,more:33,most:33,must:13,name:[14,33,35],need:33,none:[0,8,13,14,16,19,20,22,23,24,25,26],noninfring:34,noth:33,notic:34,now:33,number:[11,13,19],number_lin:13,object:[8,13,14,16,18,19,20,21,30,33],obtain:34,occ:11,occurr:[11,12,13,27,28,29,31,33],old:13,one:[8,12,13,33,35],oper:33,orchestr:[5,6,7,33],origin:0,orquestr:35,other:[33,34],otherwis:34,our:33,out:34,over:12,overview:33,own:33,packag:34,page:33,param:[10,20,33],paramet:[0,1,8,9,11,12,13,14,16,19,20,22,23,24,25,26],part:33,particular:34,pass:33,path:[13,19,33],permiss:34,permit:34,persist:[19,33],person:34,pillar:33,pir:11,plain:33,pleas:[32,34],pointer:[0,12],portion:34,posit:[14,35],possibl:33,pre:[0,1,10],present:[0,1,9,10,11,12,13,14,19,33],previous:19,princip:[0,1,9,10,11,12],probabilist:[3,25,33],proccess:12,process:[0,1,10,13,19,33],process_doc:12,process_docu:12,process_queri:12,prompt:16,properti:[8,13,14],provid:34,publish:34,pure:33,purpos:34,push:14,python:[33,34],qir:11,queri:[0,1,8,9,10,11,12,15],query_repr:12,question:34,rank:33,readi:19,readthedoc:33,receiv:[16,19],recov:19,rel:19,repr:12,repres:[0,9,11,12,14,16,19,35],represent:[12,35],respons:[33,35],respos:35,restrict:34,result:[1,8,9,12,18,33,35],retriev:[13,33],revers:[20,29],rezend:[32,34],right:34,run:[0,1,9,10,11,12,19,33],run_boolean:8,run_extended_boolean:8,run_probabilist:8,run_vector_spac:8,same:33,sanit:[19,33],sanitize_lin:13,save:[19,33],score:[8,9,12,14,16,17,35],search:[8,16,33],search_input:16,see:33,sell:34,servic:35,set:[13,33],shall:34,should:33,similar:[12,33],sinc:16,singl:33,size:19,size_vocabulari:19,smooth:24,softwar:34,solut:[1,8,9,12,16,17,33],some:[19,33],sort:13,space:33,start:[19,33],statist:11,stop:[12,19],stopword:13,stopwords_path:[13,19],str:[0,3,11,12,13,14,16,19,21,27,28,29,30,31],string:[14,19,33],strip:13,strip_acc:13,structur:[0,1,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33],subject:34,sublicens:34,substanti:34,success:19,summari:[0,1,3,8,9,10,11,12,13,14,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31],take:[20,29],target:33,term:[0,1,9,10,11,12,13,14,35],test:33,text:[0,1,9,10,11,12,13,14,33],tftype:29,thi:[12,13,14,19,33,34,35],thing:33,through:33,time:33,tort:34,tupl:[1,17],txt:[19,33],ufop:[32,34],updat:19,update_path:19,use:[19,33,34],used:33,user:[8,16],valu:[3,20,21,27,29,30],vector:[3,33],vectori:[12,35],version:33,vi_valu:11,vocabulari:[0,1,8,9,10,11,12,16,18,20,22,23,24,25,26,27,28,29,31],wai:33,want:33,warranti:34,weight:[8,20,21,22,23,24,25,26,27,28,29,30,31,33],weith:19,well:33,whether:34,whom:34,wiith:0,without:[13,34],word:[13,19],work:33,yet:[19,33],you:33,your:33},titles:["IterModel","Model","ModelExecutionError","ModelType","NoSuchModelException","ModelMissingParameters","NoSuchInputException","NoSuchModelException","Orchestrator","Boolean","ExtendedBoolean","Probabilistic","Vector","Sanitizer","Occurrence","NoSuchAnswerException","Query","Result","Solution","Vocabulary","IDF","IDFFactory","InverseFrequency","InverseFrequencyMax","InverseFrequencySmooth","ProbabilisticInverseFrequency","Unary","Binary","LogNormalization","TF","TFFactory","TermFrequency","Need Help?","Match Up","License","Overview classes"],titleterms:{"boolean":[9,35],"class":35,algorithm:35,binari:27,contact:34,extendedboolean:[10,35],guid:33,help:32,idf:[20,35],idffactori:21,indic:33,inversefrequ:22,inversefrequencymax:23,inversefrequencysmooth:24,itermodel:0,licens:34,lognorm:28,match:33,matchup:35,model:[1,35],modelexecutionerror:2,modelmissingparamet:5,modeltyp:3,modul:35,need:32,nosuchanswerexcept:15,nosuchinputexcept:6,nosuchmodelexcept:[4,7],occurr:[14,35],orchestr:[8,35],overview:35,present:35,probabilist:[11,35],probabilisticinversefrequ:25,queri:[16,33,35],result:17,sanit:[13,35],simpl:33,solut:[18,35],statu:33,structur:35,tabl:33,termfrequ:31,tffactori:30,unari:26,vector:[12,35],vocabulari:[19,33,35],weight:35}})