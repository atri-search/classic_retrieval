Search.setIndex({docnames:["api/matchup.models.Model.IterModel","api/matchup.models.Model.Model","api/matchup.models.Model.ModelExecutionError","api/matchup.models.Model.ModelType","api/matchup.models.Model.NoSuchModelException","api/matchup.models.Orchestrator.ModelMissingParameters","api/matchup.models.Orchestrator.NoSuchInputException","api/matchup.models.Orchestrator.NoSuchModelException","api/matchup.models.Orchestrator.Orchestrator","api/matchup.models.algorithms.Boolean.Boolean","api/matchup.models.algorithms.ExtendedBoolean.ExtendedBoolean","api/matchup.models.algorithms.Probabilistic.Probabilistic","api/matchup.models.algorithms.Vector.Vector","api/matchup.models.algorithms.extended_boolean.ExtendedBoolean","api/matchup.models.algorithms.vector_space.Vector","api/matchup.presentation.Sanitizer.Sanitizer","api/matchup.structure.Occurrence.Occurrence","api/matchup.structure.Query.NoSuchAnswerException","api/matchup.structure.Query.Query","api/matchup.structure.Solution.Result","api/matchup.structure.Solution.Solution","api/matchup.structure.Vocabulary.Vocabulary","api/matchup.structure.weighting.Idf.IDF","api/matchup.structure.weighting.Idf.IDFFactory","api/matchup.structure.weighting.Idf.InverseFrequency","api/matchup.structure.weighting.Idf.InverseFrequencyMax","api/matchup.structure.weighting.Idf.InverseFrequencySmooth","api/matchup.structure.weighting.Idf.ProbabilisticInverseFrequency","api/matchup.structure.weighting.Idf.Unary","api/matchup.structure.weighting.Tf.Binary","api/matchup.structure.weighting.Tf.LogNormalization","api/matchup.structure.weighting.Tf.TF","api/matchup.structure.weighting.Tf.TFFactory","api/matchup.structure.weighting.Tf.TermFrequency","api/matchup.structure.weighting.tf.DoubleNormalization","api/matchup.structure.weighting.tf.DoubleNormalizationK","help","index","license","overview"],envversion:{"sphinx.domains.c":1,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":1,"sphinx.domains.index":1,"sphinx.domains.javascript":1,"sphinx.domains.math":2,"sphinx.domains.python":1,"sphinx.domains.rst":1,"sphinx.domains.std":1,sphinx:56},filenames:["api\\matchup.models.Model.IterModel.rst","api\\matchup.models.Model.Model.rst","api\\matchup.models.Model.ModelExecutionError.rst","api\\matchup.models.Model.ModelType.rst","api\\matchup.models.Model.NoSuchModelException.rst","api\\matchup.models.Orchestrator.ModelMissingParameters.rst","api\\matchup.models.Orchestrator.NoSuchInputException.rst","api\\matchup.models.Orchestrator.NoSuchModelException.rst","api\\matchup.models.Orchestrator.Orchestrator.rst","api\\matchup.models.algorithms.Boolean.Boolean.rst","api\\matchup.models.algorithms.ExtendedBoolean.ExtendedBoolean.rst","api\\matchup.models.algorithms.Probabilistic.Probabilistic.rst","api\\matchup.models.algorithms.Vector.Vector.rst","api\\matchup.models.algorithms.extended_boolean.ExtendedBoolean.rst","api\\matchup.models.algorithms.vector_space.Vector.rst","api\\matchup.presentation.Sanitizer.Sanitizer.rst","api\\matchup.structure.Occurrence.Occurrence.rst","api\\matchup.structure.Query.NoSuchAnswerException.rst","api\\matchup.structure.Query.Query.rst","api\\matchup.structure.Solution.Result.rst","api\\matchup.structure.Solution.Solution.rst","api\\matchup.structure.Vocabulary.Vocabulary.rst","api\\matchup.structure.weighting.Idf.IDF.rst","api\\matchup.structure.weighting.Idf.IDFFactory.rst","api\\matchup.structure.weighting.Idf.InverseFrequency.rst","api\\matchup.structure.weighting.Idf.InverseFrequencyMax.rst","api\\matchup.structure.weighting.Idf.InverseFrequencySmooth.rst","api\\matchup.structure.weighting.Idf.ProbabilisticInverseFrequency.rst","api\\matchup.structure.weighting.Idf.Unary.rst","api\\matchup.structure.weighting.Tf.Binary.rst","api\\matchup.structure.weighting.Tf.LogNormalization.rst","api\\matchup.structure.weighting.Tf.TF.rst","api\\matchup.structure.weighting.Tf.TFFactory.rst","api\\matchup.structure.weighting.Tf.TermFrequency.rst","api\\matchup.structure.weighting.tf.DoubleNormalization.rst","api\\matchup.structure.weighting.tf.DoubleNormalizationK.rst","help.rst","index.rst","license.rst","overview.rst"],objects:{"matchup.models":{model:[39,0,0,"-"],orchestrator:[39,0,0,"-"]},"matchup.models.algorithms":{"boolean":[39,0,0,"-"],extended_boolean:[39,0,0,"-"],probabilistic:[39,0,0,"-"],vector_space:[39,0,0,"-"]},"matchup.models.algorithms.extended_boolean":{ExtendedBoolean:[13,1,1,""]},"matchup.models.algorithms.extended_boolean.ExtendedBoolean":{generate_scores:[13,2,1,""],run:[13,2,1,""]},"matchup.models.algorithms.vector_space":{Vector:[14,1,1,""]},"matchup.models.algorithms.vector_space.Vector":{generate_scores:[14,2,1,""],run:[14,2,1,""],stop:[14,2,1,""]},"matchup.presentation":{sanitizer:[39,0,0,"-"]},"matchup.structure":{occurrence:[39,0,0,"-"],query:[39,0,0,"-"],solution:[39,0,0,"-"],vocabulary:[39,0,0,"-"]},"matchup.structure.weighting":{idf:[39,0,0,"-"],tf:[39,0,0,"-"]},"matchup.structure.weighting.tf":{DoubleNormalization:[34,1,1,""],DoubleNormalizationK:[35,1,1,""]},"matchup.structure.weighting.tf.DoubleNormalization":{calculate:[34,2,1,""]},"matchup.structure.weighting.tf.DoubleNormalizationK":{calculate:[35,2,1,""]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"]},objtypes:{"0":"py:module","1":"py:class","2":"py:method"},terms:{"abstract":39,"boolean":[13,14,37],"case":[],"catch":[],"class":[13,14,34,35,37],"enum":[],"float":[13,14,34,35],"function":14,"import":37,"int":[],"return":[13,14,34,35,39],"static":[],"true":[],"try":[],AND:38,And:37,BUT:38,FOR:38,NOT:38,THE:38,That:37,The:[37,38,39],There:37,USE:38,WITH:38,With:37,_term_occurr:[],abc:[],about:37,abov:38,absolut:[],accent:[],action:38,add:[],addit:39,after:37,algorithm:[13,14,37],algortihm:[],all:[14,37,38],allow:37,almost:[],also:37,alt:[],aluno:[36,38],ani:[37,38],anoth:[14,37],answer:37,append:[],approach:37,aris:38,asc:[],ask:37,associ:38,attribut:13,author:38,badg:[],base:[13,14,34,35,37,39],base_lin:[],basic:[],becaus:37,been:37,befor:37,between:14,bool:14,brain:39,build:37,built:37,calcul:[14,34,35],can:37,cast_solut:[],catch_pir:[],catch_qir:[],charg:38,chosen_doc:[],claim:38,classic:39,classmethod:14,clean:[],collect:37,com:36,combin:39,command:[],compar:37,complet:[],compos:39,composit:[],concept:[37,39],condit:38,configur:[37,39],connect:38,construct:[],constructor:37,contact:[36,37],contain:[],content:37,contract:38,copi:38,copyright:38,core:[],correct:[],creat:[37,39],create_collect:[],create_idf_by_str:[],create_tf_by_str:[],damag:38,data:[14,37,39],deal:38,defaultdict:14,defin:[],desc:[],describ:39,design:39,dict:[],dictionari:14,directori:37,disc:[],distribut:38,doc:14,doc_repr:[13,14],docs_with_kei:[],document:[13,14,34,35,37,38,39],document_maximum_frequ:[34,35],doesn:37,edu:[36,38],element:[],encapsul:39,engin:37,entri:[],enumer:[],event:38,everyth:39,exampl:37,except:[],execut:[37,39],expand:[],explor:37,express:38,extend:[13,37],extended_boolean:[13,37],extendedboolean:[],extract:37,failur:[],fals:[],fij:[34,35],file:[37,38],file_path:[],first:[37,39],firstli:37,fit:38,flag:14,folder:37,folder_path:[],follow:38,format:37,four:37,free:38,frequenc:39,from:[37,38],furnish:38,gener:13,generate_collect:[],generate_scor:[13,14],get:37,get_dict:[],get_number_docs_by_keyword:[],get_typ:[],getter:[],given:14,gmail:36,grant:38,group:13,had:37,happen:37,has:[],have:37,haven:37,help:37,here:[37,39],herebi:38,holder:38,how:37,http:[],identifi:[],idf:[13,37],implement:[37,39],impli:38,import_collect:37,import_fil:37,import_fold:37,import_stopword:[],includ:38,index:37,index_fil:37,index_lin:[],indic:14,inform:37,initi:[],initialize_occurr:[],initialize_point:[],input:[],insert:[],insight:37,interfac:39,invers:39,inversefrequ:13,itermodel:[13,14,39],its:[14,37],just:37,kei:13,keyword:[14,34,35],kind:38,kwarg:[34,35],latest:[],learn:37,let:37,liabil:38,liabl:38,lib:[],librari:37,licens:37,limit:38,line:[],list:[13,14,39],log:[],lowest:[],lowest_doc:[],make:37,manag:37,marco:[36,38],matchup:[13,14,34,35,37],max:[],memori:37,merchant:38,merg:38,method:[13,14,34,35,37],mfprezend:36,model:[13,14,34,35,37],modeltyp:[],modern:39,modifi:38,modul:37,more:37,most:37,must:[],name:37,need:[13,37],none:[],noninfring:38,noth:37,notic:38,now:37,number:[],number_lin:[],object:37,obtain:38,occ:[],occurr:[14,34,35,37],old:[],one:[13,14,37,39],onli:39,oper:[37,39],orchestr:37,origin:[],orquestr:[],other:[37,38],otherwis:38,our:37,out:38,over:14,overview:37,own:37,packag:38,page:37,param:[37,39],paramet:[13,14],part:37,particular:38,pass:37,path:37,permiss:38,permit:38,persist:37,person:38,pillar:37,pir:[],plain:37,pleas:[36,38],pointer:14,portion:38,posit:[],possibl:37,pre:[],present:[13,14,37],previous:[],princip:14,probabilist:37,proccess:[],process:[37,39],process_doc:[],process_docu:[],process_queri:[],prompt:[],properti:[],provid:38,publish:38,pure:37,purpos:38,push:[],python:[37,38],qir:[],queri:[13,14],query_repr:14,question:38,rank:37,readi:[],readthedoc:[],receiv:[],recov:[],rel:[],relat:39,repr:14,repres:[13,14,39],represent:[14,39],respons:[37,39],respos:[],restrict:38,result:[14,37,39],retriev:37,revers:[],rezend:[36,38],right:38,run:[13,14,37],run_boolean:[],run_extended_boolean:[],run_probabilist:[],run_vector_spac:[],same:37,sanit:37,sanitize_lin:[],save:37,score:[13,14,39],search:[37,39],search_input:[],see:37,sell:38,servic:[],set:37,shall:38,should:37,similar:[14,37],sinc:[],singl:37,size:13,size_vocabulari:[],smooth:[],softwar:38,solut:[14,37],some:[37,39],sort:[],space:[14,37,39],start:37,statist:[],stop:14,stopword:[],stopwords_path:[],str:[14,34,35],string:37,strip:[],strip_acc:[],structur:[13,14,34,35,37],subject:38,sublicens:38,substanti:38,success:[],summari:[13,14,34,35],take:[],target:[],term:[13,14,39],termfrequ:13,test:37,text:[13,14,37,39],tftype:[],thi:[14,37,38,39],thing:37,through:37,time:37,tort:38,tupl:[],txt:37,ufop:[36,38],unstabl:37,updat:[],update_path:[],use:[37,38],used:37,user:39,using:39,valu:[],vector:[13,37,39],vector_spac:[14,37],vectori:[],version:37,vi_valu:[],vocabulari:[13,14],wai:37,want:37,warranti:38,weight:[13,34,35,37],weith:[],well:37,whether:38,whom:38,wiith:[],without:38,word:[],work:37,yet:37,you:37,your:37},titles:["IterModel","Model","ModelExecutionError","ModelType","NoSuchModelException","ModelMissingParameters","NoSuchInputException","NoSuchModelException","Orchestrator","Boolean","ExtendedBoolean","Probabilistic","Vector","ExtendedBoolean","Vector","Sanitizer","Occurrence","NoSuchAnswerException","Query","Result","Solution","Vocabulary","IDF","IDFFactory","InverseFrequency","InverseFrequencyMax","InverseFrequencySmooth","ProbabilisticInverseFrequency","Unary","Binary","LogNormalization","TF","TFFactory","TermFrequency","DoubleNormalization","DoubleNormalizationK","Need Help?","Match Up","License","Overview classes"],titleterms:{"boolean":[9,39],"class":39,algorithm:39,binari:29,contact:38,doublenorm:34,doublenormalizationk:35,extended_boolean:39,extendedboolean:[10,13],guid:37,help:36,idf:[22,39],idffactori:23,indic:37,inversefrequ:24,inversefrequencymax:25,inversefrequencysmooth:26,itermodel:0,licens:38,lognorm:30,match:37,matchup:39,model:[1,39],modelexecutionerror:2,modelmissingparamet:5,modeltyp:3,modul:39,need:36,nosuchanswerexcept:17,nosuchinputexcept:6,nosuchmodelexcept:[4,7],occurr:[16,39],orchestr:[8,39],overview:39,present:39,probabilist:[11,39],probabilisticinversefrequ:27,queri:[18,37,39],result:19,sanit:[15,39],simpl:37,solut:[20,39],statu:37,structur:39,tabl:37,termfrequ:33,tffactori:32,unari:28,vector:[12,14],vector_spac:39,vocabulari:[21,37,39],weight:39}})